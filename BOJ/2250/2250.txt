예제를 보았을 때 1과 2 사이의 거리차이는 2의 오른쪽 자식 수와 같고

즉 하나의 노드와 그 왼쪽 자식과의 거리 차이는 왼쪽자식의 오른쪽 자식 수와 같고

오른쪽 자식과의 거리 차이는 오른쪽 자식의 왼쪽 자식 수와 같다

트리를 만들고 루트 노드를 알 수 없으므로 트리르 저장할 때 parent를 만든 후

루트 노드를 구해주고 루트 노드를 기준으로 bfs를 돌려 노드들의 인덱스를 구해 준다.

레벨은 트리 생성후 dfs를 통해 구해 줄 수 있다.

같은 레벨의 인덱스들을 모두 벡터에 집어넣고 정렬을 통해 끝값과 처음 값을 빼서 답을 구해 냈다.

구해내고 이렇게 풀면 안될 것 같아서 다른 사람의 풀이를 봤더니

인덱스를 구하는 방식은 단순한 중위순회 inorder였다

트리를 생성하고 루트노드를 구한 후 중위순회를 돌려 인덱스를 구하고 답을 구해도 된다.
